#!/bin/bash
# Configure monitor for sunshine streaming

set -e  # Exit on any error

# Get sunshine client screen variables
SUNSHINE_WIDTH=${SUNSHINE_CLIENT_WIDTH:-1920}
SUNSHINE_HEIGHT=${SUNSHINE_CLIENT_HEIGHT:-1080}
SUNSHINE_FPS=${SUNSHINE_CLIENT_FPS:-60}

# Create a temporary file to store original monitor configuration
ORIGINAL_MONITORS_FILE="/tmp/hyprland_original_monitors.txt"

# Log file for debugging
LOG_FILE="/tmp/sunshine-start-hypr.log"

# Function to log with timestamp
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Function to restore physical monitor on error
restore_physical_monitor() {
    log "ERROR: Restoring physical monitor..."
    hyprctl keyword monitor "HDMI-A-2,3840x2160@240,0x0,1" || true
    exit 1
}

# Set trap to restore monitor on script failure
trap restore_physical_monitor ERR

# Start logging
log "=== Starting sunshine-start-hypr ==="
log "Sunshine variables: WIDTH=${SUNSHINE_WIDTH} HEIGHT=${SUNSHINE_HEIGHT} FPS=${SUNSHINE_FPS}"

# Save current monitor configuration
log "Saving current monitor configuration..."
hyprctl monitors -j > "$ORIGINAL_MONITORS_FILE"
log "Original configuration saved to: $ORIGINAL_MONITORS_FILE"

# Function to create custom modeline and apply it
try_custom_resolution() {
    local width=$1
    local height=$2
    local fps=$3
    
    log "Attempting to set custom resolution ${width}x${height}@${fps} using modeline approach..."
    
    # Generate modeline using gtf (better format for Hyprland)
    log "Generating modeline for ${width}x${height}@${fps} using gtf..."
    local modeline=$(gtf $width $height $fps | grep "Modeline" | sed 's/Modeline //')
    if [ -z "$modeline" ]; then
        log "ERROR: Failed to generate modeline for ${width}x${height}@${fps}"
        return 1
    fi
    
    log "Generated modeline: ${modeline}"
    
    # Extract the modeline values (everything after the mode name, remove sync flags for now)
    local modeline_values=$(echo "$modeline" | sed 's/"[^"]*"//' | sed 's/^ *//' | sed 's/-HSync +Vsync//' | sed 's/  */ /g')
    log "Modeline values: ${modeline_values}"
    
    # Try to apply the modeline using hyprctl
    log "Applying modeline to HDMI-A-2..."
    local hypr_error=$(hyprctl keyword monitor "HDMI-A-2,modeline ${modeline_values},0x0,1" 2>&1)
    if [ $? -eq 0 ]; then
        sleep 2  # Give it more time to take effect
        if hyprctl monitors | grep -q "${width}x${height}@${fps}"; then
            log "Custom resolution ${width}x${height}@${fps} set successfully with modeline"
            return 0
        else
            log "Modeline applied but resolution not visible: ${hypr_error}"
            # Check what resolution we actually got
            log "Current monitor state:"
            hyprctl monitors | grep -A 5 "HDMI-A-2" | tee -a "$LOG_FILE"
        fi
    else
        log "Failed to apply modeline: ${hypr_error}"
    fi
    
    log "Modeline approach failed for ${width}x${height}@${fps}"
    return 1
}

# Create a virtual headless monitor for sunshine
log "Creating virtual headless monitor for sunshine..."
log "This will create a virtual display that sunshine can capture without affecting your physical monitor"

# Create headless output
log "Creating headless output..."
if ! hyprctl output create headless HEADLESS-2; then
    log "ERROR: Failed to create headless output"
    restore_physical_monitor
fi

# Configure the headless monitor with the exact client resolution
log "Configuring headless monitor to ${SUNSHINE_WIDTH}x${SUNSHINE_HEIGHT}@${SUNSHINE_FPS}..."
if ! hyprctl keyword monitor "HEADLESS-2,${SUNSHINE_WIDTH}x${SUNSHINE_HEIGHT}@${SUNSHINE_FPS},0x0,1"; then
    log "ERROR: Failed to configure headless monitor"
    hyprctl output remove HEADLESS-2 2>/dev/null || true
    restore_physical_monitor
fi

# Verify the headless monitor was created
if ! hyprctl monitors | grep -q "HEADLESS-2"; then
    log "ERROR: Headless monitor not found after creation"
    restore_physical_monitor
fi

log "SUCCESS: Virtual headless monitor created: ${SUNSHINE_WIDTH}x${SUNSHINE_HEIGHT}@${SUNSHINE_FPS}"
log "Physical monitor remains unchanged at original resolution"

# Verify the change worked
log "Verifying monitor configuration..."
hyprctl monitors | tee -a "$LOG_FILE"

log "SUCCESS: Monitor configured for sunshine: ${TARGET_RESOLUTION}"
log "=== sunshine-start-hypr completed ==="